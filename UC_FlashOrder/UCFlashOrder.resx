<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnShow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timerFO.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>